<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqupt.dormitory.model.Room">
	<resultMap type="com.cqupt.dormitory.model.Room" id="roomResult">
		<id property="id" column="room_id"/>
		<result property="roomNum" column="room_num"/>
		<result property="totalBed" column="total_bed"/>
		<result property="cost" column="cost"/>
		<result property="alreadyStay" column="alreadstay"/><!-- 已经入住人数 -->
		<association property="floor" column="floor_id" resultMap="com.cqupt.dormitory.model.Floor.floorResult"/>
	</resultMap>
	
	<select id="findByRoomId" resultMap="roomResult" parameterType="String">
		SELECT * FROM `room` WHERE room_num = #{roomNum}
	</select>

	<select id="find_all_room_by_buildingnum" parameterType="map" resultMap="roomResult">
		SELECT 
		  COUNT(student.`stu_id`) AS alreadstay,
		  s.*
		FROM
		  student 
		  RIGHT JOIN 
		    (SELECT 
		      room.*,
		      floor.`building_id`,
		      floor.`floor_num`,
		      building.sex 
		    FROM
		      room 
		      LEFT JOIN FLOOR
		        ON (
		          floor.`floor_id` = room.`floor_id`
		        ) ,building 
		    WHERE  building.`building_id` = floor.`building_id` and room.`room_num` LIKE #{buildingNum} AND floor.`floor_num` LIKE #{floorNum}) s 
		    ON (s.room_id = student.`room_id`) 
		GROUP BY s.room_id 
		order by s.room_num
	</select>
	
	
	<select id="find_all_category_room" resultType="string">
		SELECT DISTINCT(room.`total_bed`) FROM room 
	</select>
	
	
	<select id="find_all_cost_room" resultType="string">
		SELECT DISTINCT(room.`cost`) FROM room 
	</select>
	
	<update id="update_room_by_floorids" parameterType="map">
		update room set cost=#{fee}
			 <if test="cata != null">
				 ,total_bed=#{cata} 
			 </if>
			 where floor_id in
	 	<foreach item="item" index="index" collection="floorIds"  open="(" separator="," close=")">
                       #{item}
        </foreach> 
	</update>
	
	<update id="update" parameterType="com.cqupt.dormitory.model.Room">
		update room set cost=#{cost}, total_bed=#{totalBed} where room_num=#{roomNum} 
	</update>
	
	<select id="find_current_room" parameterType="int" resultType="int">
		SELECT SUBSTRING(MAX(room.`room_num`),5) FROM room WHERE room.`floor_id`=#{floorId}
	</select>
	
	<insert id="add_room" parameterType="com.cqupt.dormitory.model.Room">
		INSERT INTO `dormitory`.`room` (`room_num`, `floor_id`, `cost`, `total_bed`) VALUES (#{roomNum}, #{floor.id}, #{cost}, #{totalBed}); 
	</insert>
	
	<delete id="delete_room" parameterType="string">
		delete from room where room_num=#{roomNum}
	</delete>
	
	<select id="find_all_person_room" parameterType="string" resultMap="com.cqupt.dormitory.model.Student.studentResult">
		SELECT * FROM student 
		LEFT JOIN room ON(student.`room_id` = room.`room_id`) 
		LEFT JOIN academy ON(academy.`academy_id`=student.`academy_id`)
		LEFT JOIN teacher ON (student.`tec_id`=teacher.`tec_id`)
		WHERE room.`room_num`= #{roomNum}
	</select>
	
	<update id="update_student_room_id" parameterType="map">
		UPDATE `student` SET `room_id` = #{roomId} ,`live_status` = 4 
			<if test="oldRoomNum!=null">
				,old_roomnum=#{oldRoomNum}
			</if>
		,in_time=CURRENT_TIMESTAMP WHERE stu_num =#{studentNum}
	</update>
	
	<select id="find_room_by_many_field" parameterType="map" resultMap="roomResult">
			SELECT room_id,room.`room_num`,f.`floor_id`,cost,total_bed,building_id,building_num,sex FROM room RIGHT JOIN 
			(
			SELECT floor.`floor_id`,building.`building_id`,building.`building_num`,building.`sex` FROM FLOOR LEFT JOIN building ON(floor.`building_id` = building.`building_id`) WHERE building.`building_num` LIKE '${buildingNum}' AND 
			floor.`floor_num` LIKE '${floorNum}'  AND building.`sex` LIKE '${sex}'
			) f ON(room.`floor_id` = f.floor_id) WHERE room.`room_num` LIKE '${roomNum}'
	</select>
	
	
	<select id="find_room_by_studentnum" parameterType="string" resultMap="roomResult">
		SELECT * FROM student LEFT JOIN room ON (room.`room_id` = student.`room_id`) WHERE student.`stu_num` = #{studentNum}
	</select>
	
	<select id="find_room_people_num" parameterType="string" resultType="int">
		SELECT COUNT(student.`stu_id`) FROM student LEFT JOIN room ON student.`room_id` = room.`room_id` WHERE room.`room_num` =#{roomNum}
	</select>
	
</mapper>